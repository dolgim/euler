# -*- coding:utf-8 -*-
from euler import lib


def is_palindromic(x):
	s = str(x)
	l = len(s)
	for i in range(l/2):
		if s[i] != s[-i-1]: return False
	return True



def e01():
	sum = 0
	for x in range(1000):
		if x % 5 == 0 or x % 3 == 0:
			sum += x
	return sum

def e02():
	a = 1
	b = 1
	c = 0
	sum = 0
	while c <= 4000000:
		c = a + b
		b = a
		a = c
		if c % 2 == 0:
			sum += c
	return sum

def e03():
	x = 600851475143
	f = 1
	while x > f:
		f += 1
		while x % f == 0: x /= f

	return f

def e04():
	p = 0
	for x in range(999, 99, -1):
		for y in range(999, x, -1):
			if(is_palindromic(x*y) and x*y > p):
				p = x*y
	return p

def e05():
	return reduce(lib.lcm, range(1,20))

def e06():
	sum, sum_of_square = 0, 0
	for i in range(1, 101):
		sum_of_square += i*i
		sum += i
	return sum*sum - sum_of_square

def e07():
	n = 1
	counter = 0
	while counter < 10001:
		n += 1
		if lib.is_prime(n):
			counter += 1

	return n

def e08():
	numstr = '73167176531330624919225119674426574742355349194934' +\
	'96983520312774506326239578318016984801869478851843' +\
	'85861560789112949495459501737958331952853208805511' +\
	'12540698747158523863050715693290963295227443043557' +\
	'66896648950445244523161731856403098711121722383113' +\
	'62229893423380308135336276614282806444486645238749' +\
	'30358907296290491560440772390713810515859307960866' +\
	'70172427121883998797908792274921901699720888093776' +\
	'65727333001053367881220235421809751254540594752243' +\
	'52584907711670556013604839586446706324415722155397' +\
	'53697817977846174064955149290862569321978468622482' +\
	'83972241375657056057490261407972968652414535100474' +\
	'82166370484403199890008895243450658541227588666881' +\
	'16427171479924442928230863465674813919123162824586' +\
	'17866458359124566529476545682848912883142607690042' +\
	'24219022671055626321111109370544217506941658960408' +\
	'07198403850962455444362981230987879927244284909188' +\
	'84580156166097919133875499200524063689912560717606' +\
	'05886116467109405077541002256983155200055935729725' +\
	'71636269561882670428252483600823257530420752963450'

	max = 0
	for i in xrange(len(numstr) - 5):
		product = 1
		for j in numstr[i:i+5]:
			product *= int(j)
		if max < product:
			max = product

	return max

def e09():
	for a in xrange(1, 1001):
		for b in xrange(a, 1001):
			c = 1000 - a - b
			if a*a + b*b == c*c:
				print a, b, c
				return a*b*c